<MudPaper Class="pa-4">
    <MudGrid>
        <MudItem xs="12">
            <MudTextField T="string" Label="Name" />
        </MudItem>
        <MudItem xs="12">
            <MudRadioGroup T="SetRange" Required="true" SelectedOption="SetRange.Range" RequiredError="Choosing set or range is required!">
                <MudRadio Option="@SetRange.Range">Range</MudRadio>
                <MudRadio Option="@SetRange.Set">Set</MudRadio>
            </MudRadioGroup>
        </MudItem>
        <MudItem xs="12"> 
            <MudRadioGroup T="DataType" Required="true" SelectedOption="DataType.Int"  RequiredError="Choosing data type is required!">
                <MudRadio Option="@DataType.Int">Int</MudRadio>
                <MudRadio Option="@DataType.Double">Double</MudRadio>
                <MudRadio Option="@DataType.Operator">Operator</MudRadio>
                <MudRadio Option="@DataType.String" Disabled="true" onmouseover="DisplayStringDisabledReason">String</MudRadio>
            </MudRadioGroup>
        </MudItem>
        <MudItem xs="12">
            <MudInput T="int" Label="Minimum" Required="true" RequiredError="Minimum of range type must be specified."></MudInput>
            <MudInput T="int" Label="Maximum" Required="true" RequiredError="Maximum of range type must be specified."></MudInput>
            <MudInput T="int" Label="Increment" Required="true" RequiredError="Increment of range type must be specified."></MudInput>
        </MudItem>
    </MudGrid>

</MudPaper>

@code {

    public enum SetRange { Set, Range };
    public enum DataType { Int, Double, Operator, String };

    [Parameter]
    public DataType dt { get; set; } = DataType.Int;

    [Parameter]
    public SetRange sr { get; set; } = SetRange.Set;


    protected override void OnParametersSet() {
        base.OnParametersSet();

    }

    int counter = 0;

    void DisplayStringDisabledReason() {
        Console.WriteLine($"   >>> hovering over data type string <<< {counter++}");
    }

     /*<div class="d-flex">
        <MudRadioGroup T="string" Required="true" RequiredError="Account type is required!">
            <MudRadio Option="@("Personal")">Personal</MudRadio>
            <MudRadio Option="@("Professional")">Professional</MudRadio>
        </MudRadioGroup>
    </div> -->*/

}
