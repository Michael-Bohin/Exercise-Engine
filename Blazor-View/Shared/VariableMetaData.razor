@using ExerciseEngine
@inject AppState appState;

<MudItem xs=12 Class="pa-3">
    <MudGrid>
        <MudItem xs=8>
            <MudTextField T="string" Label="Name" @bind-Value="v.name"/>
        </MudItem>
        <MudItem xs=2>
            <MudButton Variant="Variant.Filled" @onclick="() => RemoveVariable(i)" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Delete</MudButton>
        </MudItem>
    </MudGrid>
</MudItem>
                            
<MudRadioGroup T="SetRange" @bind-SelectedOption="v.setRange" Required="true" RequiredError="Choosing set or range is required!">
    <MudRadio Option="@SetRange.Range">Range</MudRadio>
    <MudRadio Option="@SetRange.Set">Set</MudRadio>
</MudRadioGroup>
<MudRadioGroup T="DataType" @bind-SelectedOption="v.dataType" Required="true" RequiredError="Choosing data type is required!">
    <MudRadio Option="@DataType.Int">int</MudRadio>
    <MudRadio Option="@DataType.Double">double</MudRadio>
    <MudRadio Option="@DataType.Operator">Operator</MudRadio>
    <MudRadio Option="@DataType.Int" Disabled="true" onmouseover="DisplayStringDisabledReason">string</MudRadio>
</MudRadioGroup>

@code {
    public VariableMetaData() { }

    public VariableMetaData(Bindable_NotPolymorphic_Variable v, int i) {
        this.v = v;
        this.i = i;
    }

    protected override void OnInitialized() { appState.OnChange += StateHasChanged; }

    [Parameter]
    public Bindable_NotPolymorphic_Variable? v { get; set; }

    [Parameter]
    public int i { get; set; }

    void RemoveVariable(int index) {
        Console.WriteLine($"variable with index {index} is being removed!");
    }
}
